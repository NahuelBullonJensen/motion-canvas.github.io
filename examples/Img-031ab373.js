import{u as f,R as y,D as w,T as v,Y as S,g as h,f as E,s as d,i as g,r as u}from"./makeScene2D-2ac2c549.js";function C(n){if(!m()||n.startsWith("/cors-proxy/"))return n;const e=new URL(window.location.toString());try{const t=new URL(n,e);if(!t.protocol.startsWith("http")||e.host===t.host||!R(t.host))return n}catch{return n}return`/cors-proxy/${encodeURIComponent(n)}`}function R(n){const e=x();if(e.length===0)return!0;for(const t of e)if(t.toLowerCase().trim()===n)return!0;return!1}function m(){return!1}let c;function x(){return{}.VITEST!=="true"&&c?[...c]:(c=function(){if(!m()||!{VITE_MC_PROXY_ENABLED:"false",BASE_URL:"/examples/",MODE:"production",DEV:!1,PROD:!0,SSR:!1})return[];const e={}.VITE_MC_PROXY_ALLOW_LIST??"[]",t=JSON.parse(e);Array.isArray(t)||f().error("Parsed Allow List expected to be an Array, but is "+typeof t);const r=[];for(const a of t){if(typeof a!="string"){f().warn("Unexpected Value in Allow List: "+a+". Expected a String. Skipping.");continue}r.push(a)}return r}(),[...c])}var s=globalThis&&globalThis.__decorate||function(n,e,t,r){var a=arguments.length,i=a<3?e:r===null?r=Object.getOwnPropertyDescriptor(e,t):r,l;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(n,e,t,r);else for(var p=n.length-1;p>=0;p--)(l=n[p])&&(i=(a<3?l(i):a>3?l(e,t,i):l(e,t))||i);return a>3&&i&&Object.defineProperty(e,t,i),i};class o extends y{constructor(e){super(e)}desiredSize(){const e=super.desiredSize();if(e.x===null&&e.y===null){const t=this.image();return{x:t.naturalWidth,y:t.naturalHeight}}return e}image(){const e=C(this.src()),t=this.view().assetHash();let r=o.pool[e];return r||(r=document.createElement("img"),r.crossOrigin="anonymous",r.src=`${e}?${t}`,o.pool[e]=r),r.complete||w.collectPromise(new Promise((a,i)=>{r.addEventListener("load",a),r.addEventListener("error",i)})),r}imageCanvas(){const e=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});if(!e)throw new Error("Could not create an image canvas");return e}filledImageCanvas(){const e=this.imageCanvas(),t=this.image();return e.canvas.width=t.naturalWidth,e.canvas.height=t.naturalHeight,e.imageSmoothingEnabled=this.smoothing(),e.drawImage(t,0,0),e}draw(e){this.drawShape(e),this.clip()&&e.clip(this.getPath());const t=this.alpha();if(t>0){const r=v.fromSizeCentered(this.computedSize());e.save(),t<1&&(e.globalAlpha*=t),e.imageSmoothingEnabled=this.smoothing(),S(e,this.image(),r),e.restore()}this.drawChildren(e)}applyFlex(){super.applyFlex();const e=this.image();this.element.style.aspectRatio=(this.ratio()??e.naturalWidth/e.naturalHeight).toString()}getColorAtPoint(e){const t=this.computedSize(),r=this.naturalSize(),a=new h(e).add(this.computedSize().scale(.5)).mul(r.div(t).safe);return this.getPixelColor(a)}naturalSize(){const e=this.image();return new h(e.naturalWidth,e.naturalHeight)}getPixelColor(e){const t=this.filledImageCanvas(),r=new h(e),a=t.getImageData(r.x,r.y,1,1).data;return new E.Color({r:a[0],g:a[1],b:a[2],a:a[3]/255})}collectAsyncResources(){super.collectAsyncResources(),this.image()}}o.pool={};s([d()],o.prototype,"src",void 0);s([g(1),d()],o.prototype,"alpha",void 0);s([g(!0),d()],o.prototype,"smoothing",void 0);s([u()],o.prototype,"image",null);s([u()],o.prototype,"imageCanvas",null);s([u()],o.prototype,"filledImageCanvas",null);s([u()],o.prototype,"naturalSize",null);export{o as I};
