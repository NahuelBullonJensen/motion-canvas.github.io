import{u as f,R as y,D as w,Q as S,W as v,g as d,f as E,s as h,i as g,r as u}from"./makeScene2D-f1afe989.js";function C(n){if(!m()||n.startsWith("/cors-proxy/"))return n;const e=new URL(window.location.toString());try{const t=new URL(n,e);if(!t.protocol.startsWith("http")||e.host===t.host||!R(t.host))return n}catch{return n}return`/cors-proxy/${encodeURIComponent(n)}`}function R(n){const e=x();if(e.length===0)return!0;for(const t of e)if(t.toLowerCase().trim()===n)return!0;return!1}function m(){return!1}let c;function x(){return{}.VITEST!=="true"&&c?[...c]:(c=function(){if(!m()||!{VITE_MC_PROXY_ENABLED:"false",BASE_URL:"/examples/",MODE:"production",DEV:!1,PROD:!0,SSR:!1})return[];const e={}.VITE_MC_PROXY_ALLOW_LIST??"[]",t=JSON.parse(e);Array.isArray(t)||f().error("Parsed Allow List expected to be an Array, but is "+typeof t);const o=[];for(const r of t){if(typeof r!="string"){f().warn("Unexpected Value in Allow List: "+r+". Expected a String. Skipping.");continue}o.push(r)}return o}(),[...c])}var s=globalThis&&globalThis.__decorate||function(n,e,t,o){var r=arguments.length,i=r<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,t):o,l;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(n,e,t,o);else for(var p=n.length-1;p>=0;p--)(l=n[p])&&(i=(r<3?l(i):r>3?l(e,t,i):l(e,t))||i);return r>3&&i&&Object.defineProperty(e,t,i),i};class a extends y{constructor(e){super(e)}desiredSize(){const e=super.desiredSize();if(e.x===null&&e.y===null){const t=this.image();return{x:t.naturalWidth,y:t.naturalHeight}}return e}image(){const e=C(this.src());let t=a.pool[e];return t||(t=document.createElement("img"),t.crossOrigin="anonymous",t.src=e,a.pool[e]=t),t.complete||w.collectPromise(new Promise((o,r)=>{t.addEventListener("load",o),t.addEventListener("error",r)})),t}imageCanvas(){const e=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});if(!e)throw new Error("Could not create an image canvas");return e}filledImageCanvas(){const e=this.imageCanvas(),t=this.image();return e.canvas.width=t.naturalWidth,e.canvas.height=t.naturalHeight,e.imageSmoothingEnabled=this.smoothing(),e.drawImage(t,0,0),e}draw(e){this.drawShape(e),this.clip()&&e.clip(this.getPath());const t=this.alpha();if(t>0){const o=S.fromSizeCentered(this.computedSize());e.save(),t<1&&(e.globalAlpha*=t),e.imageSmoothingEnabled=this.smoothing(),v(e,this.image(),o),e.restore()}this.drawChildren(e)}applyFlex(){super.applyFlex();const e=this.image();this.element.style.aspectRatio=(this.ratio()??e.naturalWidth/e.naturalHeight).toString()}getColorAtPoint(e){const t=this.computedSize(),o=this.naturalSize(),r=new d(e).add(this.computedSize().scale(.5)).mul(o.div(t).safe);return this.getPixelColor(r)}naturalSize(){const e=this.image();return new d(e.naturalWidth,e.naturalHeight)}getPixelColor(e){const t=this.filledImageCanvas(),o=new d(e),r=t.getImageData(o.x,o.y,1,1).data;return new E.Color({r:r[0],g:r[1],b:r[2],a:r[3]/255})}collectAsyncResources(){super.collectAsyncResources(),this.image()}}a.pool={};s([h()],a.prototype,"src",void 0);s([g(1),h()],a.prototype,"alpha",void 0);s([g(!0),h()],a.prototype,"smoothing",void 0);s([u()],a.prototype,"image",null);s([u()],a.prototype,"imageCanvas",null);s([u()],a.prototype,"filledImageCanvas",null);s([u()],a.prototype,"naturalSize",null);export{a as I};
