import{u as f,R as y,D as w,K as v,T as E,g as p,f as S,s as d,i as g,q as h}from"./makeScene2D-e0bf4ae8.js";function C(r){if(!m()||r.startsWith("/cors-proxy/"))return r;const e=new URL(window.location.toString());try{const t=new URL(r,e);if(!t.protocol.startsWith("http")||e.host===t.host||!R(t.host))return r}catch{return r}return`/cors-proxy/${encodeURIComponent(r)}`}function R(r){const e=x();if(e.length===0)return!0;for(const t of e)if(t.toLowerCase().trim()===r)return!0;return!1}function m(){return!1}let c;function x(){return{}.VITEST!=="true"&&c?[...c]:(c=function(){if(!m()||!{VITE_MC_PROXY_ENABLED:"false",BASE_URL:"/examples/",MODE:"production",DEV:!1,PROD:!0,SSR:!1})return[];const e={}.VITE_MC_PROXY_ALLOW_LIST??"[]",t=JSON.parse(e);Array.isArray(t)||f().error("Parsed Allow List expected to be an Array, but is "+typeof t);const n=[];for(const o of t){if(typeof o!="string"){f().warn("Unexpected Value in Allow List: "+o+". Expected a String. Skipping.");continue}n.push(o)}return n}(),[...c])}var s=globalThis&&globalThis.__decorate||function(r,e,t,n){var o=arguments.length,i=o<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,l;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(r,e,t,n);else for(var u=r.length-1;u>=0;u--)(l=r[u])&&(i=(o<3?l(i):o>3?l(e,t,i):l(e,t))||i);return o>3&&i&&Object.defineProperty(e,t,i),i};class a extends y{constructor(e){super(e)}desiredSize(){const e=super.desiredSize();if(e.x===null&&e.y===null){const t=this.image();return{x:t.naturalWidth,y:t.naturalHeight}}return e}image(){const e=C(this.src());if(a.pool[e])return a.pool[e];const t=document.createElement("img");return t.crossOrigin="anonymous",t.src=e,t.complete||w.collectPromise(new Promise((n,o)=>{t.addEventListener("load",n),t.addEventListener("error",o)})),a.pool[e]=t,t}imageCanvas(){const e=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});if(!e)throw new Error("Could not create an image canvas");return e}filledImageCanvas(){const e=this.imageCanvas(),t=this.image();return e.canvas.width=t.naturalWidth,e.canvas.height=t.naturalHeight,e.imageSmoothingEnabled=this.smoothing(),e.drawImage(t,0,0),e}draw(e){this.drawShape(e),this.clip()&&e.clip(this.getPath());const t=this.alpha();if(t>0){const n=v.fromSizeCentered(this.computedSize());e.save(),t<1&&(e.globalAlpha*=t),e.imageSmoothingEnabled=this.smoothing(),E(e,this.image(),n),e.restore()}this.drawChildren(e)}applyFlex(){super.applyFlex();const e=this.image();this.element.style.aspectRatio=(this.ratio()??e.naturalWidth/e.naturalHeight).toString()}getColorAtPoint(e){const t=this.image(),n=this.computedSize(),o=new p(t.naturalWidth,t.naturalHeight),i=new p(e).add(this.computedSize().scale(.5)).mul(o.div(n).safe);return this.getPixelColor(i)}getPixelColor(e){const t=this.filledImageCanvas(),n=new p(e),o=t.getImageData(n.x,n.y,1,1).data;return new S.Color({r:o[0],g:o[1],b:o[2],a:o[3]/255})}collectAsyncResources(){super.collectAsyncResources(),this.image()}}a.pool={};s([d()],a.prototype,"src",void 0);s([g(1),d()],a.prototype,"alpha",void 0);s([g(!0),d()],a.prototype,"smoothing",void 0);s([h()],a.prototype,"image",null);s([h()],a.prototype,"imageCanvas",null);s([h()],a.prototype,"filledImageCanvas",null);export{a as I};
