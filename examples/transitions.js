import{M as u,m as k,j as p,w as x,R as E,T as R,V as T,u as v,c as g,a as C,J as D,b as z,P as h}from"./makeScene2D.1d52a1b2.js";import{c as y}from"./createRef.f9eb3d88.js";let l;l!=null||(l=new u("transitions",!1,{version:0}));l.loadData({version:0});const j=l;let f;f!=null||(f=new u("transitions-first",!1,{version:1,seed:2868148813}));f.loadData({version:1,seed:2868148813});const b=f,o=k(function*(n){n.add(p(E,{width:"100%",height:"100%",fill:"lightseagreen",layout:!0,alignItems:"center",justifyContent:"center",children:p(R,{fontSize:160,fontWeight:700,fill:"#fff",fontFamily:'"JetBrains Mono", monospace',children:"FIRST SCENE"})})),yield*x(1)});o.name="transitions-first";o.meta=b;var w;(w=o.onReplaced)!=null||(o.onReplaced=new T(o.config));let d;d!=null||(d=new u("transitions-second",!1,{version:1,seed:1065746214}));d.loadData({version:1,seed:1065746214});const F=d;function I(n,e){e==null&&(e=()=>{});const s=v(),c=s.previous,t=c==null?void 0:c.LifecycleEvents.onBeforeRender.subscribe(e),r=s.LifecycleEvents.onBeforeRender.subscribe(n);return()=>{s.enterAfterTransitionIn(),t==null||t(),r()}}function*N(n=D.Top,e=.6){const c=v().getSize().getOriginOffset(n).scale(2),t=g.createSignal(),r=g.createSignal(c),P=I(m=>m.translate(r.x(),r.y()),m=>m.translate(t.x(),t.y()));yield*C(t(c.scale(-1),e),r(g.zero,e)),P()}const i=k(function*(n){const e=y(),s=y();n.add(p(E,{ref:e,width:"100%",height:"100%",fill:"lightcoral",layout:!0,alignItems:"center",justifyContent:"center",children:p(R,{ref:s,fontSize:160,fontWeight:700,fill:"#fff",fontFamily:'"JetBrains Mono", monospace',children:"SECOND SCENE"})})),yield*N(D.Left),yield*x(.4),yield*C(e().fill("lightseagreen",.6),s().text("FIRST SCENE",.6))});i.name="transitions-second";i.meta=F;var S;(S=i.onReplaced)!=null||(i.onReplaced=new T(i.config));const a=z({scenes:[o,i]}),J=()=>a instanceof h?(a.meta=j,a.name="transitions",a.logger.warn({message:"A project instance was exported instead of a project factory.",remarks:`<p>Use the <code>makeProject()</code> function instead:</p>
<pre><code class="language-ts"><span class="hljs-keyword">import</span> {makeProject} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@motion-canvas/core&#x27;</span>;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title function_">makeProject</span>({
  <span class="hljs-comment">// Configuration and scenes go here.</span>
});
</code></pre>
`,stack:a.creationStack}),a):new h("transitions",j,a);export{J as default};
